@* @model ParkingHUB.Pagination.PageResult<ParkingHUB.ViewModel.ParkingListViewModel>

@{

}

<h1 class="centered-title">Vehicle Parking for @ViewBag.Location</h1>

<div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
        <img src="..." class="rounded mr-2" alt="...">
        <strong class="mr-auto">Message</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        Message.
    </div>
</div>

<style>
    .pagination-container {
        display: flex;
        justify-content: center;
    }

    .centered-title {
        text-align: center;
        margin-bottom: 1em;
    }
</style>

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addParkingModal">Add Parking</button>

<div class="modal fade" id="addParkingModal" tabindex="-1" aria-labelledby="addParkingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addParkingModalLabel">Add Parking</h5>
            </div>
            <div class="modal-body">
                <form id="addParkingForm" method="post" asp-controller="Parking" asp-action="AddParking">
                    <div class="mb-3">
                        <label for="location" class="form-label">Location</label>
                        <input type="text" class="form-control" id="location" name="Location" asp-for="@Model.Location">
                    </div>
                    <div class="mb-3">
                        <label for="plateNumber" class="form-label">Plate Number</label>
                        <input type="text" class="form-control" id="plateNumber" name="PlateLicense" asp-for="@Model.PlateLicense">
                    </div>
                    <div class="mb-3">
                        <label for="checkIn" class="form-label">Check in</label>
                        <input type="datetime-local" class="form-control" id="checkIn" name="CheckIn" asp-for="@Model.CheckIn">
                    </div>
                    <div class="mb-3">
                        <label for="checkOut" class="form-label">Check out</label>
                        <input type="datetime-local" class="form-control" id="checkOut" name="CheckOut" asp-for="@Model.CheckOut">
                        <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="position: absolute; top: 0; right: 0; margin: 1rem;">
                            <div class="toast-header">
                                <strong class="mr-auto">Message</strong>
                                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="toast-body">
                                Message.
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="saveParking()">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="position: absolute; top: 0; right: 0; margin: 1rem;">
    <div class="toast-header">
        <strong class="mr-auto">Message</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
            Message.
    </div>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Number parking</th>
            <th>Location</th>
            <th>Plate license</th>
            <th>Check in</th>
            <th>Check out</th>
            <th>Parking fee</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Results.Count; i++)
        {
            var item = Model.Results[i];
            <tr>
                <td>@(i + 1)</td>
                <td>@item.Location</td>
                <td>@item.PlateLicense</td>
                <td>@item.CheckIn</td>
                <td>@item.CheckOut</td>
                <td>@item.ParkingFee RON</td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation" class="pagination-container">
    <ul class="pagination">
        @if (Model.PreviousPage.HasValue)
        {
            <li class="page-item"><a class="page-link" href="?pageNumber=@Model.PreviousPage&location=@ViewBag.Location">Previous</a></li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")"><a class="page-link" href="?pageNumber=@i&location=@ViewBag.Location">@i</a></li>
        }

        @if (Model.NextPage.HasValue)
        {
            <li class="page-item"><a class="page-link" href="?pageNumber=@Model.NextPage&location=@ViewBag.Location">Next</a></li>
        }
    </ul>
</nav>
<script>
    function saveParking() {
        var location = document.getElementById('location').value;
        var plateLicense = document.getElementById('plateNumber').value;
        var checkIn = document.getElementById('checkIn').value;
        var checkOut = document.getElementById('checkOut').value;

        fetch('/Parking/AddParking', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Location: location,
                PlateLicense: plateLicense,
                CheckIn: checkIn,
                CheckOut: checkOut
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
        then(data => {
            if (data.showToast) {
                //var myToast = new bootstrap.Toast(document.getElementById('toast'));
                //myToast.show();
                alert("Succesfully adding");
            } else {
                // Afișați un mesaj de eroare sau faceți alte acțiuni aici
                alert('An error occurred while saving the parking!');
            }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script> *@